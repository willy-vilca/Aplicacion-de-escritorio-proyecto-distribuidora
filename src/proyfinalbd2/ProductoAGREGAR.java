/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyfinalbd2;

import java.awt.Color;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import proyfinalbd2.conexion.categoria;
import proyfinalbd2.conexion.producto;
import proyfinalbd2.conexion.subcategoria;

/**
 *
 * @author ASUS
 */
public class ProductoAGREGAR extends javax.swing.JFrame {
    private DefaultTableModel modelo;
    public JTable tablaSubCategoriasMenuPrincipal;
    public int id_subcat;
    public String nomcat;

    /**
     * Creates new form DatosCliente
     */
    private JTable tablaProductos;
    TableRowSorter<DefaultTableModel> SORTER;
    JTextField BUSCADOR;
    JComboBox COMBO;
    JLabel CONTADOR;
    
        private void filtrar(TableRowSorter<DefaultTableModel> sorter) {
        String texto = jTextBuscarSubCategoria.getText();
        int columna = jComboSubCategoriasColumna.getSelectedIndex();
        
        if (texto.trim().length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + texto, columna));
        }
    }       
    public ProductoAGREGAR(JTable tablaProductos,TableRowSorter<DefaultTableModel> SORTER,JTextField BUSCADOR,JComboBox COMBO,JLabel Contador) {
        this.tablaProductos=tablaProductos;
        this.BUSCADOR=BUSCADOR;
        this.SORTER=SORTER;
        this.COMBO=COMBO;
        this.CONTADOR=Contador;
        initComponents();
        
        
	getContentPane().setBackground(Color.WHITE);
        
        setLocationRelativeTo(null);
        setDefaultCloseOperation(ClienteTabla.DISPOSE_ON_CLOSE);
        subcategoria.mostrarSubCategoriasEnTabla(jTableSubCategorias);
        
        modelo = (DefaultTableModel) jTableSubCategorias.getModel(); // Asignas el modelo
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelo);
        jTableSubCategorias.setRowSorter(sorter); // Conectas el sorter a la tabla
        
        // Vinculas el filtro con el JTextField
        jTextBuscarSubCategoria.getDocument().addDocumentListener(new DocumentListener() {
        public void insertUpdate(DocumentEvent e) { filtrar(sorter); }
        public void removeUpdate(DocumentEvent e) { filtrar(sorter); }
        public void changedUpdate(DocumentEvent e) { filtrar(sorter); }
    });
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonAddProducto = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldCodigoProducto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDescripcion = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldPrecio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextBuscarSubCategoria = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldStock = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableSubCategorias = new javax.swing.JTable();
        jComboSubCategoriasColumna = new javax.swing.JComboBox<>();
        Cabecera = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButtonAddProducto.setBackground(new java.awt.Color(238, 0, 0));
        jButtonAddProducto.setFont(new java.awt.Font("Roboto", 1, 36)); // NOI18N
        jButtonAddProducto.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAddProducto.setText("Agregar");
        jButtonAddProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddProductoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel6.setText("Codigo");

        jTextFieldCodigoProducto.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel4.setText("Nombre");

        jTextFieldNombre.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel2.setText("Descripci√≥n");

        jTextAreaDescripcion.setColumns(20);
        jTextAreaDescripcion.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDescripcion);

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel3.setText("Precio");

        jTextFieldPrecio.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel7.setText("SubCategoria");

        jTextBuscarSubCategoria.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel8.setText("Stock");

        jTextFieldStock.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N

        jTableSubCategorias.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jTableSubCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Subcategoria", "ID-Categoria"
            }
        ));
        jScrollPane3.setViewportView(jTableSubCategorias);

        jComboSubCategoriasColumna.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Nombre", "Categoria" }));
        jComboSubCategoriasColumna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboSubCategoriasColumnaActionPerformed(evt);
            }
        });

        Cabecera.setBackground(new java.awt.Color(174, 0, 0));
        Cabecera.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Nuevo Producto");
        Cabecera.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonAddProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextBuscarSubCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboSubCategoriasColumna, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextFieldNombre)
                                    .addComponent(jTextFieldCodigoProducto)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldStock, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addGap(102, 102, 102)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(Cabecera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Cabecera, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldCodigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldStock, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextBuscarSubCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboSubCategoriasColumna, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButtonAddProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddProductoActionPerformed

        String cod      = jTextFieldCodigoProducto.getText().trim();
        String nom      = jTextFieldNombre.getText().trim();
        String desc     = jTextAreaDescripcion.getText().trim();
        String p        = jTextFieldPrecio.getText().trim();
        String stk      = jTextFieldStock.getText().trim();

        // Validaci√≥n de campos vac√≠os
        if (nom.isEmpty() || cod.isEmpty() || desc.isEmpty() || p.isEmpty()|| stk.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Todos los campos deben estar llenos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validaci√≥n precio
        double precio;
        try {
            precio = Double.parseDouble(p); // Si no es un n√∫mero, lanza excepci√≥n
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El precio debe ser un numero real.", "Precio no valido", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
        // Validaci√≥n de stock en enteto
        int stock;
        try {
            stock = Integer.parseInt(stk); // Si no es un n√∫mero entero, lanza excepci√≥n
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El stock debe ser un n√∫mero entero.", "stock inv√°lido", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int fila = jTableSubCategorias.getSelectedRow(); // Obtenemos la fila seleccionada

        // Validamos que se haya seleccionado una categoria
        if (fila < 0) {
            JOptionPane.showMessageDialog(this,
                "Debe seleccionar un categoria.",
                "Error", JOptionPane.ERROR_MESSAGE);
            return; // detenemos el flujo
        }
        
        int filaReal = jTableSubCategorias.convertRowIndexToModel(fila);
        id_subcat = Integer.parseInt(modelo.getValueAt(filaReal, 0).toString()); // ID de la subcategoria
        nomcat = modelo.getValueAt(filaReal, 1).toString(); // Nombre de la subcategoria
        
        // Si llega hasta aqu√≠, todo es v√°lido
        
        //se agrega el producto a la base de datos
        producto prod=new producto(cod,nom,desc,precio,id_subcat,stock);
        prod.insertarProducto();
        // Datos ingresados:
        String datos = "Producto Ingresado correctamente.\n\n"
                     + "Codigo: " + cod + "\n"
                     + "Nombre: " + nom + "\n"
                     + "Descripcion: " + desc + "\n"
                     + "Precio: " + precio + "\n"
                     + "ID-Subcategoria: " + id_subcat + "\n"
                     + "Stock: " + stock
                    ;

        JOptionPane.showMessageDialog(this, datos, "Datos Guardados", JOptionPane.INFORMATION_MESSAGE);
        
        BUSCADOR.setText("");      // limpia buscador
        SORTER.setRowFilter(null);
        
        
        //actualizar tabla de productos
        producto.mostrarProductosEnTabla(tablaProductos);
        
        TableColumnModel columnModel = tablaProductos.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(5);//id
        columnModel.getColumn(1).setPreferredWidth(40);//codigo
        columnModel.getColumn(2).setPreferredWidth(250);////nombre
        columnModel.getColumn(3).setPreferredWidth(400);//descripcion
        columnModel.getColumn(4).setPreferredWidth(30);//Subcategoria
        columnModel.getColumn(5).setPreferredWidth(5);//precio 
        columnModel.getColumn(6).setPreferredWidth(5);//Stock
        
        DefaultTableCellRenderer centrado = new DefaultTableCellRenderer();
        centrado.setHorizontalAlignment(SwingConstants.CENTER);

        //  Aplicar el centrado a la columna "id" (√≠ndice 0)
        tablaProductos.getColumnModel().getColumn(0).setCellRenderer(centrado);
        tablaProductos.getColumnModel().getColumn(1).setCellRenderer(centrado);
        
        tablaProductos.getColumnModel().getColumn(5).setCellRenderer(centrado);
        tablaProductos.getColumnModel().getColumn(6).setCellRenderer(centrado);
        
        SORTER = new TableRowSorter<DefaultTableModel>((DefaultTableModel) tablaProductos.getModel());
        tablaProductos.setRowSorter(SORTER);
        
        BUSCADOR.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) { filtrar(); }
            @Override
            public void removeUpdate(DocumentEvent e) { filtrar(); }
            @Override
            public void changedUpdate(DocumentEvent e) { filtrar(); }

            private void filtrar() {
                String texto = BUSCADOR.getText();
                if (texto.trim().length() == 0) {
                    SORTER.setRowFilter(null);
                } else {
                    SORTER.setRowFilter(RowFilter.regexFilter("(?i)" + texto, COMBO.getSelectedIndex()));
                }
            }
        });
        
        
        //actualizar los registros
        int n = tablaProductos.getRowCount();
        CONTADOR.setText(n+" PRODUCTOS REGISTRADOS");
        
        // Cerrar solo esta ventana
        dispose();

        
    }//GEN-LAST:event_jButtonAddProductoActionPerformed

    private void jComboSubCategoriasColumnaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboSubCategoriasColumnaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboSubCategoriasColumnaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductoAGREGAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductoAGREGAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductoAGREGAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductoAGREGAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductoAGREGAR().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Cabecera;
    private javax.swing.JButton jButtonAddProducto;
    private javax.swing.JComboBox<String> jComboSubCategoriasColumna;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableSubCategorias;
    private javax.swing.JTextArea jTextAreaDescripcion;
    private javax.swing.JTextField jTextBuscarSubCategoria;
    private javax.swing.JTextField jTextFieldCodigoProducto;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldPrecio;
    private javax.swing.JTextField jTextFieldStock;
    // End of variables declaration//GEN-END:variables
}
