/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyfinalbd2;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import proyfinalbd2.conexion.empleado;


/**
 *
 * @author ASUS
 */
public class EmpleadosTabla extends javax.swing.JFrame {
    
    //ATRIBUTOS SDE LA INTERFAZ
        int id_empleado;
        public static String empleadoId;
        public static String dni;
        public static String nombre;
        public static String rol;
        public static String usuario;
        public static String clave;
        public static java.sql.Date fecha;
        
        private DefaultTableModel modelo;
        TableRowSorter<DefaultTableModel> sorter;
        
        private void filtrar(TableRowSorter<DefaultTableModel> sorter) {
        String texto = jTextFieldBuscarEmpleado.getText();
        
        int columna = jComboColumnasEmpleados.getSelectedIndex();
        
        if (texto.trim().length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + texto, columna));
        }    
        }
        public void inicializar() {
            DefaultTableModel modelo = (DefaultTableModel) jTableEmpleados.getModel();
            sorter = new TableRowSorter<>(modelo); // ¡aquí sí lo llenas!
            jTableEmpleados.setRowSorter(sorter);
        }
        
    
    /**
     * Creates new form Interface
     */
    public EmpleadosTabla() {
        initComponents();
        setLocationRelativeTo(null);
        empleado.mostrarEmpleadosEnTabla(jTableEmpleados);
        
        xEmpleados();
        
        getContentPane().setBackground(new Color(255, 255, 255)); // blanco
        
        
        DefaultTableCellRenderer centrado = new DefaultTableCellRenderer();
        centrado.setHorizontalAlignment(SwingConstants.CENTER);
        
        TableColumnModel columnModel = jTableEmpleados.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(5);//id
        columnModel.getColumn(1).setPreferredWidth(40);//dni
        columnModel.getColumn(2).setPreferredWidth(150);////nombre
        columnModel.getColumn(3).setPreferredWidth(150);//rol
        columnModel.getColumn(4).setPreferredWidth(250);//usuario
        columnModel.getColumn(5).setPreferredWidth(205);//clave
        columnModel.getColumn(6).setPreferredWidth(45);//fecha
        

        //  Aplicar el centrado a la columna "id" (índice 0)
        jTableEmpleados.getColumnModel().getColumn(0).setCellRenderer(centrado);
        jTableEmpleados.getColumnModel().getColumn(1).setCellRenderer(centrado);
        jTableEmpleados.getColumnModel().getColumn(3).setCellRenderer(centrado);
        jTableEmpleados.getColumnModel().getColumn(6).setCellRenderer(centrado);

        
        modelo = (DefaultTableModel) jTableEmpleados.getModel(); // Asignas el modelo
        sorter = new TableRowSorter<>(modelo);
        jTableEmpleados.setRowSorter(sorter); // Conectas el sorter a la tabla
        
        // Vinculas el filtro con el JTextField
         jTextFieldBuscarEmpleado.getDocument().addDocumentListener(new DocumentListener() {
        public void insertUpdate(DocumentEvent e) { filtrar(sorter); }
        public void changedUpdate(DocumentEvent e) { filtrar(sorter); }
        public void removeUpdate(DocumentEvent e) { filtrar(sorter); }
    });
         
                // Agregar un listener al modelo
        modelo.addTableModelListener(new javax.swing.event.TableModelListener() {
            @Override
            public void tableChanged(javax.swing.event.TableModelEvent e) {
                int totalFilas = modelo.getRowCount();
                JClientesRegistrados.setText(totalFilas + " CLIENTES REGISTRADOS");
            }
        });
         
        
        
    }
        public void xEmpleados(){
        int n = jTableEmpleados.getRowCount();
        JClientesRegistrados.setText(n+" EMPLEADOS REGISTRADOS");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEmpleados = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        JClientesRegistrados = new javax.swing.JLabel();
        Cabecera = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Lateral = new javax.swing.JPanel();
        jButtonAddCliente = new javax.swing.JButton();
        jButtonModificarCliente = new javax.swing.JButton();
        jButtonEliminarCliente = new javax.swing.JButton();
        jButtonVolver = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jTextFieldBuscarEmpleado = new javax.swing.JTextField();
        jComboColumnasEmpleados = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jTableEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "DNI", "Nombre", "Cargo/Rol", "Usuario", "Clave", "Registro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEmpleados.getTableHeader().setResizingAllowed(false);
        jTableEmpleados.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableEmpleados);

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel1.setText("Buscador");

        JClientesRegistrados.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        JClientesRegistrados.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JClientesRegistrados.setText("n Empleados Registrados");

        Cabecera.setBackground(new java.awt.Color(171, 0, 0));
        Cabecera.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Empleados");
        Cabecera.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, 3, 1350, 50));

        jPanel2.setBackground(new java.awt.Color(224, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1510, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        Cabecera.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1510, 10));

        Lateral.setBackground(new java.awt.Color(238, 0, 0));
        Lateral.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonAddCliente.setBackground(new java.awt.Color(238, 0, 0));
        jButtonAddCliente.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jButtonAddCliente.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAddCliente.setText("Agregar");
        jButtonAddCliente.setBorder(null);
        jButtonAddCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAddCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddClienteActionPerformed(evt);
            }
        });
        Lateral.add(jButtonAddCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 80));

        jButtonModificarCliente.setBackground(new java.awt.Color(238, 0, 0));
        jButtonModificarCliente.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jButtonModificarCliente.setForeground(new java.awt.Color(255, 255, 255));
        jButtonModificarCliente.setText("Modificar");
        jButtonModificarCliente.setBorder(null);
        jButtonModificarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonModificarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarClienteActionPerformed(evt);
            }
        });
        Lateral.add(jButtonModificarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 210, 80));

        jButtonEliminarCliente.setBackground(new java.awt.Color(238, 0, 0));
        jButtonEliminarCliente.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jButtonEliminarCliente.setForeground(new java.awt.Color(255, 255, 255));
        jButtonEliminarCliente.setText("Eliminar");
        jButtonEliminarCliente.setBorder(null);
        jButtonEliminarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonEliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarClienteActionPerformed(evt);
            }
        });
        Lateral.add(jButtonEliminarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 210, 90));

        jButtonVolver.setBackground(new java.awt.Color(238, 0, 0));
        jButtonVolver.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jButtonVolver.setForeground(new java.awt.Color(255, 255, 255));
        jButtonVolver.setText("Volver al menú");
        jButtonVolver.setBorder(null);
        jButtonVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });
        Lateral.add(jButtonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 210, 100));

        jButtonSalir.setBackground(new java.awt.Color(238, 0, 0));
        jButtonSalir.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jButtonSalir.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSalir.setText("Salir");
        jButtonSalir.setBorder(null);
        jButtonSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });
        Lateral.add(jButtonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, 210, 60));

        jTextFieldBuscarEmpleado.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jTextFieldBuscarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBuscarEmpleadoActionPerformed(evt);
            }
        });

        jComboColumnasEmpleados.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jComboColumnasEmpleados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "DNI", "Nombre", "Cargo/Rol", "Usuario", "Clave" }));

        jButton1.setBackground(new java.awt.Color(238, 0, 0));
        jButton1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("LIMPIAR");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Cabecera, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Lateral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldBuscarEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(jComboColumnasEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addComponent(JClientesRegistrados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(Cabecera, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Lateral, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(JClientesRegistrados, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldBuscarEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(15, 15, 15))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(17, 17, 17)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboColumnasEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
            new MenuPrincipal().setVisible(true);
            this.dispose();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        jTextFieldBuscarEmpleado.setText("");
        sorter.setRowFilter(null);
//        System.exit(0);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonModificarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarClienteActionPerformed
        //validamos permisos según el usuario  
        int fila = jTableEmpleados.getSelectedRow(); // Obtenemos la fila seleccionada

        // Validamos que se haya seleccionado un cliente
        if (fila < 0) {
            JOptionPane.showMessageDialog(this,
                "Debe seleccionar una fila.",
                "Error", JOptionPane.ERROR_MESSAGE);
            return; // detenemos el flujo
        }
        
        //guardamos los datos de la fila seleccionada
        empleadoId = jTableEmpleados.getValueAt(fila, 0).toString(); // ID del cliente seleccionado
        dni = jTableEmpleados.getValueAt(fila, 1).toString(); // Dni del cliente selecccionado
        nombre = jTableEmpleados.getValueAt(fila, 2).toString(); // nombre seleccionado  
        rol = jTableEmpleados.getValueAt(fila, 3).toString(); // rol seleccionado
        usuario = jTableEmpleados.getValueAt(fila, 4).toString(); // usuario seleccionado
        clave = jTableEmpleados.getValueAt(fila, 5).toString(); // clave seleccionado
        fecha = java.sql.Date.valueOf(jTableEmpleados.getValueAt(fila, 6).toString());//fecha transformada a Date
        new EmpleadoMODIFICAR(jTableEmpleados,sorter,jTextFieldBuscarEmpleado,jComboColumnasEmpleados).setVisible(true);

    }//GEN-LAST:event_jButtonModificarClienteActionPerformed

    private void jButtonAddClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddClienteActionPerformed
        //validamos permisos según el usuario   
        new EmpleadoAGREGAR(jTableEmpleados,sorter,jTextFieldBuscarEmpleado,jComboColumnasEmpleados,JClientesRegistrados).setVisible(true);
    }//GEN-LAST:event_jButtonAddClienteActionPerformed

    private void jButtonEliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarClienteActionPerformed
        //validamos permisos según el usuario
        int fila = jTableEmpleados.getSelectedRow(); // Obtenemos la fila seleccionada

        // Validamos que se haya seleccionado un cliente
        if (fila < 0) {
            JOptionPane.showMessageDialog(this,
                "Debe seleccionar una fila.",
                "Error", JOptionPane.ERROR_MESSAGE);
            return; // detenemos el flujo
        }
        
        //guardamos los datos de la fila seleccionada
        empleadoId = jTableEmpleados.getValueAt(fila, 0).toString(); // ID del cliente seleccionado
        dni = jTableEmpleados.getValueAt(fila, 1).toString(); // dni usuario seleccionado
        nombre = jTableEmpleados.getValueAt(fila, 2).toString(); // nombre seleccionado          
        rol = jTableEmpleados.getValueAt(fila, 3).toString(); // rol seleccionado
        usuario = jTableEmpleados.getValueAt(fila, 4).toString(); // usuario seleccionado
        clave = jTableEmpleados.getValueAt(fila, 5).toString(); // clave seleccionado
    
            try{    
                id_empleado = Integer.parseInt(empleadoId);
                
                int opcion = JOptionPane.showConfirmDialog(
                        null,
                        "¿Está seguro de que desea eliminar al cliente con id: "+empleadoId+"?\n¡Este será borrado permanentemente de la base de datos!",
                        "Confirmar Eliminación",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.WARNING_MESSAGE
                );

                if (opcion == JOptionPane.YES_OPTION) {
                        empleado e = new empleado();
                        e.eliminarEmpleado(id_empleado);//eliminamos cliente de la bd de postgresql
                        
                            jTextFieldBuscarEmpleado.setText("");      // limpia buscador
                            sorter.setRowFilter(null);
                        //actualizar tabla de clientes
                        empleado.mostrarEmpleadosEnTabla(jTableEmpleados);
                        TableColumnModel columnModel = jTableEmpleados.getColumnModel();
                        columnModel.getColumn(0).setPreferredWidth(5);//id
                        columnModel.getColumn(1).setPreferredWidth(40);//dni
                        columnModel.getColumn(2).setPreferredWidth(150);////nombre
                        columnModel.getColumn(3).setPreferredWidth(150);//rol
                        columnModel.getColumn(4).setPreferredWidth(250);//usuario
                        columnModel.getColumn(5).setPreferredWidth(205);//clave
                        columnModel.getColumn(6).setPreferredWidth(45);//fecha

                        DefaultTableCellRenderer centrado = new DefaultTableCellRenderer();
                        centrado.setHorizontalAlignment(SwingConstants.CENTER);
                        //  Aplicar el centrado a la columna "id" (índice 0)
                        jTableEmpleados.getColumnModel().getColumn(0).setCellRenderer(centrado);
                        jTableEmpleados.getColumnModel().getColumn(2).setCellRenderer(centrado);
                        jTableEmpleados.getColumnModel().getColumn(6).setCellRenderer(centrado);
                        
                        sorter = new TableRowSorter<DefaultTableModel>((DefaultTableModel) jTableEmpleados.getModel());
                        jTableEmpleados.setRowSorter(sorter);
                        
                        xEmpleados();
                        
                        JOptionPane.showMessageDialog(
                            null,
                            "El Empleado de ID: "+id_empleado+" ha sido eliminado correctamente.",
                            "Eliminado",
                            JOptionPane.INFORMATION_MESSAGE
                        );
                        
                        
                } else {
                        JOptionPane.showMessageDialog(
                            null,
                            "Operación cancelada. El empleado no fue eliminado.",
                            "Cancelado",
                            JOptionPane.INFORMATION_MESSAGE
                    );
                }
                
            }catch(NumberFormatException e){
                        JOptionPane.showMessageDialog(null,"¡El ID del cliente tiene que ser un entero!","Alerta",JOptionPane.WARNING_MESSAGE);
    }            
    }//GEN-LAST:event_jButtonEliminarClienteActionPerformed

    private void jTextFieldBuscarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBuscarEmpleadoActionPerformed
//        jTableClientes = new JTable(modelo);
//        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelo);
//        jTableClientes.setRowSorter(sorter);
//        // Campo de búsqueda
//
//        jTextFieldBuscarCliente.getDocument().addDocumentListener(new DocumentListener() {
//            public void insertUpdate(DocumentEvent e) { filtrar(sorter); }
//            public void removeUpdate(DocumentEvent e) { filtrar(sorter); }
//            public void changedUpdate(DocumentEvent e) { filtrar(sorter); }
//        });
    }//GEN-LAST:event_jTextFieldBuscarEmpleadoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextFieldBuscarEmpleado.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmpleadosTabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmpleadosTabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmpleadosTabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmpleadosTabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmpleadosTabla().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Cabecera;
    private javax.swing.JLabel JClientesRegistrados;
    private javax.swing.JPanel Lateral;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAddCliente;
    private javax.swing.JButton jButtonEliminarCliente;
    private javax.swing.JButton jButtonModificarCliente;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JComboBox<String> jComboColumnasEmpleados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTableEmpleados;
    private javax.swing.JTextField jTextFieldBuscarEmpleado;
    // End of variables declaration//GEN-END:variables
}
