/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyfinalbd2;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import proyfinalbd2.conexion.categoria;
import proyfinalbd2.conexion.subcategoria;

/**
 *
 * @author ASUS
 */

public class CategoriaHijaEscogerCategoriaPadre extends javax.swing.JFrame {
    
    
    
    private DefaultTableModel modelo;
    public static String nomcat;
    public static int idcatpadre;
    public static String subcatnom;
    private JTable jTableSubCategorias;
    TableRowSorter<DefaultTableModel> SORTER;
    JTextField BUSCADOR;
    JComboBox COMBO;
    
    

    private void filtrar(TableRowSorter<DefaultTableModel> sorter) {
        String texto = jTextBuscarCategoria.getText();
        int columna = jComboCategoriasColumnas.getSelectedIndex();
        
        if (texto.trim().length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + texto, columna));
        }
    }    
    
    

    
    /**
     * Creates new form PedidoEscogerCliente
     */
    public CategoriaHijaEscogerCategoriaPadre(JTable jTableSubCategorias,TableRowSorter<DefaultTableModel> SORTER,JTextField BUSCADOR,JComboBox COMBO) {
        this.jTableSubCategorias=jTableSubCategorias;
        this.BUSCADOR=BUSCADOR;
        this.SORTER=SORTER;
        this.COMBO=COMBO;
        initComponents();
         getContentPane().setBackground(Color.WHITE); // fondo

        
        categoria.mostrarIdYNombresEnTabla(jTableCategorias);
        modelo = (DefaultTableModel) jTableCategorias.getModel(); // Asignas el modelo
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelo);
        jTableCategorias.setRowSorter(sorter); // Conectas el sorter a la tabla
        
        setLocationRelativeTo(null); // Centrar ventana
        setDefaultCloseOperation(CategoriasTabla.DISPOSE_ON_CLOSE);

    // Vinculas el filtro con el JTextField
    jTextBuscarCategoria.getDocument().addDocumentListener(new DocumentListener() {
        public void insertUpdate(DocumentEvent e) { filtrar(sorter); }
        public void removeUpdate(DocumentEvent e) { filtrar(sorter); }
        public void changedUpdate(DocumentEvent e) { filtrar(sorter); }
    });
    
    
    
    
    
    
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        jTableProducto1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableCategorias = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jTextBuscarCategoria = new javax.swing.JTextField();
        jButtonCrearSubCategoria = new javax.swing.JButton();
        jComboCategoriasColumnas = new javax.swing.JComboBox<>();
        jTextSubCategoriaNombre = new javax.swing.JTextField();
        Cabecera = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        jTableProducto1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTableProducto1);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Seleccione un cliente");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel2.setText("Seleccione una categoria Padre");

        jTableCategorias.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jTableCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTableCategorias);

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel4.setText("Nombre de la subcategoria :");

        jTextBuscarCategoria.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jTextBuscarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextBuscarCategoriaActionPerformed(evt);
            }
        });

        jButtonCrearSubCategoria.setBackground(new java.awt.Color(238, 0, 0));
        jButtonCrearSubCategoria.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jButtonCrearSubCategoria.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCrearSubCategoria.setText("Crear Subcategoria");
        jButtonCrearSubCategoria.setBorder(null);
        jButtonCrearSubCategoria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonCrearSubCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearSubCategoriaActionPerformed(evt);
            }
        });

        jComboCategoriasColumnas.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jComboCategoriasColumnas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID de la Categoria", "Nombre" }));
        jComboCategoriasColumnas.setSelectedIndex(1);
        jComboCategoriasColumnas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboCategoriasColumnasActionPerformed(evt);
            }
        });

        jTextSubCategoriaNombre.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        jTextSubCategoriaNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextSubCategoriaNombreActionPerformed(evt);
            }
        });

        Cabecera.setBackground(new java.awt.Color(174, 0, 0));
        Cabecera.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nueva SubCategoria");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Cabecera.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 70));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextBuscarCategoria)
                        .addGap(18, 18, 18)
                        .addComponent(jComboCategoriasColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextSubCategoriaNombre)))
                .addGap(14, 14, 14))
            .addComponent(Cabecera, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonCrearSubCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(164, 164, 164))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Cabecera, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextBuscarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboCategoriasColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextSubCategoriaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jButtonCrearSubCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCrearSubCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearSubCategoriaActionPerformed
        // TODO add your handling code here:
        subcatnom = jTextSubCategoriaNombre.getText().trim(); // Obtenemos el nombre de la subcategoria
        int fila = jTableCategorias.getSelectedRow(); // Obtenemos la categoria seleccionada

        // Validamos que se haya seleccionado un cliente
        if (fila < 0) {
            JOptionPane.showMessageDialog(this,
                "Debe seleccionar una Categoria.",
                "Error", JOptionPane.ERROR_MESSAGE);
            return; // detenemos el flujo
        }

        // Validamos que se haya colocado un nombre
        if (subcatnom.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "Debe colocar un nombre a la subcategoria.",
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Si ambas validaciones pasan, seguimos
//        long fecha = pFecha.getTime();
//        java.sql.Date fecha_sql = new java.sql.Date(fecha);

        int filaReal = jTableCategorias.convertRowIndexToModel(fila);
        idcatpadre = Integer.parseInt(modelo.getValueAt(filaReal, 0).toString()); // ID de la categoria padre
        nomcat = modelo.getValueAt(filaReal, 1).toString();//Nombre de la categoriapadre

        
        subcategoria subcat=new subcategoria(subcatnom,idcatpadre);
        subcat.insertarSubCategoria();
        
        
        JOptionPane.showMessageDialog(this,
            "Subcategoria creada exitosamente:\n" +
            "Nombre: " + subcatnom+ "\n" +
            "ID - Categoria Padre: " + idcatpadre+"-"+nomcat,
            "Éxito", JOptionPane.INFORMATION_MESSAGE);
        BUSCADOR.setText("");      // limpia buscador
        SORTER.setRowFilter(null);
        subcategoria.mostrarSubCategoriasEnTabla(jTableSubCategorias);
        SORTER = new TableRowSorter<DefaultTableModel>((DefaultTableModel) jTableSubCategorias.getModel());
        jTableSubCategorias.setRowSorter(SORTER);
                BUSCADOR.getDocument().addDocumentListener(new DocumentListener() {
             @Override
             public void insertUpdate(DocumentEvent e) { filtrar(); }
             @Override
             public void removeUpdate(DocumentEvent e) { filtrar(); }
             @Override
             public void changedUpdate(DocumentEvent e) { filtrar(); }

             private void filtrar() {
                 String texto = BUSCADOR.getText();
                 if (texto.trim().length() == 0) {
                     SORTER.setRowFilter(null);
                 } else {
                     SORTER.setRowFilter(RowFilter.regexFilter("(?i)" + texto, COMBO.getSelectedIndex()));
                 }
             }
         });

        // Abrimos la ventana siguiente
        
        this.dispose();

    }//GEN-LAST:event_jButtonCrearSubCategoriaActionPerformed

    private void jTextBuscarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextBuscarCategoriaActionPerformed
        // TODO add your handling code here:
        
        jTableCategorias = new JTable(modelo);
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelo);
        jTableCategorias.setRowSorter(sorter);
        // Campo de búsqueda

        jTextBuscarCategoria.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) { filtrar(sorter); }
            public void removeUpdate(DocumentEvent e) { filtrar(sorter); }
            public void changedUpdate(DocumentEvent e) { filtrar(sorter); }
        });


    }//GEN-LAST:event_jTextBuscarCategoriaActionPerformed

    private void jComboCategoriasColumnasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboCategoriasColumnasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboCategoriasColumnasActionPerformed

    private void jTextSubCategoriaNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextSubCategoriaNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextSubCategoriaNombreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoriaHijaEscogerCategoriaPadre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoriaHijaEscogerCategoriaPadre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoriaHijaEscogerCategoriaPadre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoriaHijaEscogerCategoriaPadre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PedidoEscogerCliente().setVisible(true);
            }
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PedidoEscogerCliente().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Cabecera;
    private javax.swing.JButton jButtonCrearSubCategoria;
    private javax.swing.JComboBox<String> jComboCategoriasColumnas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTableCategorias;
    private javax.swing.JTable jTableProducto1;
    private javax.swing.JTextField jTextBuscarCategoria;
    private javax.swing.JTextField jTextSubCategoriaNombre;
    // End of variables declaration//GEN-END:variables
}
